{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","tweets/create.js","profiles/components.js","profiles/utils.js","profiles/badge.js","profiles/lookup.js","tweets/detail.js","tweets/feed.js","tweets/list.js","tweets/components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","onerror","e","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","console","log","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","onSubmit","newVal","current","value","content","ref","required","UserLink","children","UserDisplay","user","includeFullName","hideLink","nameDisplay","first_name","last_name","Fragment","UserPicture","userIdSpan","DisplayCount","numeral","format","ProfileBadge","didFollowToggle","profileLoading","currentVerb","is_following","follower_count","following_count","bio","ProfileBadgeComponent","useState","didLookup","setDidLookup","profile","setProfile","setProfileLoading","handleBackendLookup","useEffect","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","FeedList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","final","newTweets","concat","next","results","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","key","TweetsList","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","setTweet","apiTweetDetail","App","src","logo","alt","target","rel","Boolean","hostname","appEl","getElementById","ReactDOM","render","createElement","tweetsEl","dataset","tweetFeedEl","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.158ad63d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","function getCookie(name) {\r\n  var cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n      var cookies = document.cookie.split(';');\r\n      for (var i = 0; i < cookies.length; i++) {\r\n          var cookie = cookies[i].trim();\r\n          // Does this cookie string begin with the name we want?\r\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n          }\r\n      }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data){\r\n    jsonData = JSON.stringify(data)\r\n  }\r\n  const xhr = new XMLHttpRequest()\r\n  const url = `http://localhost:8000/api${endpoint}`\r\n  xhr.responseType = \"json\"\r\n  const csrftoken = getCookie('csrftoken');\r\n  xhr.open(method, url)\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n\r\n  if (csrftoken){\r\n    // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n  }\r\n  \r\n  xhr.onload = function() {\r\n    if (xhr.status === 403) {\r\n      const detail = xhr.response.detail\r\n      if (detail === \"Authentication credentials were not provided.\"){\r\n        window.location.href = \"/login?showLoginRequired=true\"\r\n      }\r\n    }\r\n    callback(xhr.response, xhr.status)\r\n  }\r\n  xhr.onerror = function (e) {\r\n    callback({\"message\": \"The request was an error\"}, 400)\r\n  }\r\n  xhr.send(jsonData)\r\n}","import {backendLookup} from '../lookup'\r\n\r\nexport function apiTweetCreate(newTweet, callback){\r\n    backendLookup(\"POST\", \"/tweets/create/\", callback, {content: newTweet})\r\n  }\r\n\r\nexport function apiTweetAction(tweetId, action, callback){\r\n    const data = {id: tweetId, action: action}\r\n    backendLookup(\"POST\", \"/tweets/action/\", callback, data)\r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback) {\r\n    backendLookup(\"GET\", `/tweets/${tweetId}/`, callback)\r\n}\r\n\r\nexport function apiTweetFeed(callback, nextUrl) {\r\n    let endpoint =  \"/tweets/feed/\"\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback)\r\n}\r\n\r\n\r\nexport function apiTweetList(username, callback, nextUrl) {\r\n    let endpoint =  \"/tweets/\"\r\n    if (username){\r\n        endpoint =  `/tweets/?username=${username}`\r\n    }\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback)\r\n}","import React from 'react'\r\n\r\nimport {apiTweetAction} from './lookup'\r\n\r\nexport function ActionBtn(props) {\r\n    const {tweet, action, didPerformAction} = props\r\n    const likes = tweet.likes ? tweet.likes : 0\r\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\r\n    const actionDisplay = action.display ? action.display : 'Action'\r\n    \r\n    const handleActionBackendEvent = (response, status) =>{\r\n      console.log(response, status)\r\n      if ((status === 200 || status === 201) && didPerformAction){\r\n        didPerformAction(response, status)\r\n      }\r\n    }\r\n    const handleClick = (event) => {\r\n      event.preventDefault()\r\n      apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\r\n        \r\n    }\r\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\r\n    return <button className={className} onClick={handleClick}>{display}</button>\r\n  }","import React from 'react'\r\nimport {apiTweetCreate} from './lookup'\r\n\r\n\r\nexport function TweetCreate(props){\r\n  const textAreaRef = React.createRef()\r\n  const {didTweet} = props\r\n    const handleBackendUpdate = (response, status) =>{\r\n      if (status === 201){\r\n        didTweet(response)\r\n      } else {\r\n        console.log(response)\r\n        alert(\"An error occured please try again\")\r\n      }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n      event.preventDefault()\r\n      const newVal = textAreaRef.current.value\r\n      // backend api request\r\n      apiTweetCreate(newVal, handleBackendUpdate)\r\n      textAreaRef.current.value = ''\r\n    }\r\n    return <div className={props.className}>\r\n          <form onSubmit={handleSubmit}>\r\n            <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\r\n\r\n            </textarea>\r\n            <button type='submit' className='btn btn-primary my-3'>Tweet</button>\r\n        </form>\r\n  </div>\r\n}","import React from 'react'\r\n\r\n\r\n\r\nexport function UserLink (props) {\r\n  const {username} = props\r\n  const handleUserLink = (event) => {\r\n    window.location.href= `/profiles/${username}`\r\n  }\r\n  return <span className='pointer' onClick={handleUserLink}>\r\n      {props.children}\r\n  </span>\r\n}\r\n\r\n\r\nexport  function UserDisplay(props){\r\n  const {user, includeFullName, hideLink} = props\r\n  const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name} ` : null\r\n  return <React.Fragment>\r\n    {nameDisplay}\r\n    {hideLink === true ? `@${user.username}` : <UserLink username={user.username}>@{user.username}</UserLink>}\r\n  </React.Fragment>\r\n}\r\n\r\nexport  function UserPicture (props) {\r\n  const {user, hideLink} = props\r\n  const userIdSpan = <span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\r\n  {user.username[0]}\r\n</span>\r\n  return  hideLink === true ? userIdSpan : <UserLink username={user.username}>{userIdSpan}</UserLink>\r\n}","  \r\nimport React from 'react'\r\nimport numeral from 'numeral'\r\n\r\n\r\nexport function DisplayCount(props) {\r\n    return <span className={props.className}>{numeral(props.children).format(\"0a\")}</span>\r\n  }","import React, {useEffect, useState} from 'react'\r\n\r\nimport {UserDisplay, UserPicture} from './components'\r\nimport {apiProfileDetail, apiProfileFollowToggle} from './lookup'\r\n\r\nimport {DisplayCount} from './utils'\r\n\r\nfunction ProfileBadge(props) {\r\n    const {user, didFollowToggle, profileLoading} = props\r\n    let currentVerb = (user && user.is_following) ? \"Unfollow\" : \"Follow\"\r\n    currentVerb = profileLoading ? \"Loading...\" : currentVerb\r\n    const handleFollowToggle = (event) => {\r\n        event.preventDefault()\r\n        if (didFollowToggle && !profileLoading) {\r\n            didFollowToggle(currentVerb)\r\n        }\r\n    }\r\n    return user ? <div>\r\n        <UserPicture user={user} hideLink />\r\n        <p><UserDisplay user={user} includeFullName hideLink /></p>\r\n        <p><DisplayCount>{user.follower_count}</DisplayCount> {user.follower_count === 1 ? \"follower\" : \"followers\"} </p>\r\n        <p><DisplayCount>{user.following_count}</DisplayCount> following</p>\r\n        <p>{user.location}</p>\r\n        <p>{user.bio}</p>\r\n        <button className='btn btn-primary' onClick={handleFollowToggle}>{currentVerb}</button>\r\n    </div> : null\r\n}\r\n\r\nexport function ProfileBadgeComponent (props) {\r\n    const {username} = props\r\n    // lookup\r\n    const [didLookup, setDidLookup] = useState(false)\r\n    const [profile, setProfile] = useState(null)\r\n    const [profileLoading, setProfileLoading] = useState(false)\r\n    const handleBackendLookup = (response, status) => {\r\n      if (status === 200) {\r\n        setProfile(response)\r\n      }\r\n    }\r\n    useEffect(()=>{\r\n      if (didLookup === false){\r\n        apiProfileDetail(username, handleBackendLookup)\r\n        setDidLookup(true)\r\n      }\r\n    }, [username, didLookup, setDidLookup])\r\n\r\n    const handleNewFollow = (actionVerb) => {\r\n        apiProfileFollowToggle(username, actionVerb, (response, status)=>{\r\n            // console.log(response, status)\r\n            if (status===200) {\r\n                setProfile(response)\r\n                // apiProfileDetail(username, handleBackendLookup)\r\n            }\r\n            setProfileLoading(false)\r\n        })\r\n        setProfileLoading(true)\r\n        \r\n    }\r\n    return didLookup === false ? \"Loading...\" : profile ? <ProfileBadge user={profile} didFollowToggle={handleNewFollow} profileLoading={profileLoading} /> : null\r\n}","import {backendLookup} from '../lookup'\r\n\r\nexport function apiProfileDetail(username, callback) {\r\n    backendLookup(\"GET\", `/profiles/${username}/`, callback)\r\n}\r\n\r\n\r\nexport function apiProfileFollowToggle(username, action, callback) {\r\n    const data = {action: `${action && action}`.toLowerCase()}\r\n    backendLookup(\"POST\", `/profiles/${username}/follow`, callback, data)\r\n}","import React, {useState}  from 'react'\r\n\r\nimport {ActionBtn} from './buttons'\r\n\r\nimport {\r\n  UserDisplay,\r\n  UserPicture\r\n} from '../profiles'\r\n\r\nexport function ParentTweet(props){\r\n    const {tweet} = props\r\n    return tweet.parent ? <Tweet isRetweet retweeter={props.retweeter} hideActions className={' '} tweet={tweet.parent} /> : null\r\n  }\r\n  export function Tweet(props) {\r\n      const {tweet, didRetweet, hideActions, isRetweet, retweeter} = props\r\n      const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\r\n      let className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n      className = isRetweet === true ? `${className} p-2 border rounded` : className\r\n      const path = window.location.pathname\r\n      const match = path.match(/(?<tweetid>\\d+)/)\r\n      const urlTweetId = match ? match.groups.tweetid : -1\r\n      const isDetail = `${tweet.id}` === `${urlTweetId}`\r\n      \r\n      const handleLink = (event) => {\r\n        event.preventDefault()\r\n        window.location.href = `/${tweet.id}`\r\n      }\r\n      const handlePerformAction = (newActionTweet, status) => {\r\n        if (status === 200){\r\n          setActionTweet(newActionTweet)\r\n        } else if (status === 201) {\r\n          if (didRetweet){\r\n            didRetweet(newActionTweet)\r\n          }\r\n        }\r\n        \r\n      }\r\n      \r\n      return <div className={className}>\r\n         {isRetweet === true && <div className='mb-2'>\r\n          <span className='small text-muted'>Retweet via <UserDisplay user={retweeter} /></span>\r\n        </div>}\r\n        <div className='d-flex'>\r\n       \r\n          <div className=''>\r\n            <UserPicture user={tweet.user} />\r\n          </div>\r\n          <div className='col-11'>\r\n              <div>\r\n             \r\n                <p>\r\n                  <UserDisplay includeFullName user={tweet.user} />\r\n                </p>\r\n                <p>{tweet.content}</p>\r\n               \r\n                <ParentTweet tweet={tweet} retweeter={tweet.user} />\r\n              </div>\r\n          <div className='btn btn-group px-0'>\r\n          {(actionTweet && hideActions !== true) && <React.Fragment>\r\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"like\", display:\"Likes\"}}/>\r\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"unlike\", display:\"Unlike\"}}/>\r\n                  <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"retweet\", display:\"Retweet\"}}/>\r\n                </React.Fragment>\r\n          }\r\n                  {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\r\n                </div>\r\n                </div>\r\n      </div>\r\n      </div>\r\n    }","import React, {useEffect, useState}  from 'react'\r\n\r\nimport {apiTweetFeed} from './lookup'\r\n\r\nimport {Tweet} from './detail'\r\n\r\nexport function FeedList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [nextUrl, setNextUrl] = useState(null)\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(()=>{\r\n      const final = [...props.newTweets].concat(tweetsInit)\r\n      if (final.length !== tweets.length) {\r\n        setTweets(final)\r\n      }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n\r\n    useEffect(() => {\r\n      if (tweetsDidSet === false){\r\n        const handleTweetListLookup = (response, status) => {\r\n          if (status === 200){\r\n            setNextUrl(response.next)\r\n            setTweetsInit(response.results)\r\n            setTweetsDidSet(true)\r\n          }\r\n        }\r\n        apiTweetFeed(handleTweetListLookup)\r\n      }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n\r\n\r\n    const handleDidRetweet = (newTweet) => {\r\n      const updateTweetsInit = [...tweetsInit]\r\n      updateTweetsInit.unshift(newTweet)\r\n      setTweetsInit(updateTweetsInit)\r\n      const updateFinalTweets = [...tweets]\r\n      updateFinalTweets.unshift(tweets)\r\n      setTweets(updateFinalTweets)\r\n    }\r\n    const handleLoadNext = (event) => {\r\n      event.preventDefault()\r\n      if (nextUrl !== null) {\r\n        const handleLoadNextResponse = (response, status) =>{\r\n          if (status === 200){\r\n            setNextUrl(response.next)\r\n            const newTweets = [...tweets].concat(response.results)\r\n            setTweetsInit(newTweets)\r\n            setTweets(newTweets)\r\n          }\r\n        }\r\n        apiTweetFeed(handleLoadNextResponse, nextUrl)\r\n      }\r\n    }\r\n\r\n    return <React.Fragment>{tweets.map((item, index)=>{\r\n      return <Tweet  \r\n        tweet={item} \r\n        didRetweet={handleDidRetweet}\r\n        className='my-5 py-5 border bg-white text-dark' \r\n        key={`${index}-{item.id}`} />\r\n    })}\r\n    {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\r\n    </React.Fragment>\r\n  }","import React, {useEffect, useState}  from 'react'\r\n\r\nimport {apiTweetList} from './lookup'\r\n\r\nimport {Tweet} from './detail'\r\n\r\nexport function TweetsList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [nextUrl, setNextUrl] = useState(null)\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(()=>{\r\n      const final = [...props.newTweets].concat(tweetsInit)\r\n      if (final.length !== tweets.length) {\r\n        setTweets(final)\r\n      }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n\r\n    useEffect(() => {\r\n      if (tweetsDidSet === false){\r\n        const handleTweetListLookup = (response, status) => {\r\n          if (status === 200){\r\n            setNextUrl(response.next)\r\n            setTweetsInit(response.results)\r\n            setTweetsDidSet(true)\r\n          } else {\r\n            alert(\"There was an error\")\r\n          }\r\n        }\r\n        apiTweetList(props.username, handleTweetListLookup)\r\n      }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n\r\n\r\n    const handleDidRetweet = (newTweet) => {\r\n      const updateTweetsInit = [...tweetsInit]\r\n      updateTweetsInit.unshift(newTweet)\r\n      setTweetsInit(updateTweetsInit)\r\n      const updateFinalTweets = [...tweets]\r\n      updateFinalTweets.unshift(tweets)\r\n      setTweets(updateFinalTweets)\r\n    }\r\n    const handleLoadNext = (event) => {\r\n      event.preventDefault()\r\n      if (nextUrl !== null) {\r\n        const handleLoadNextResponse = (response, status) =>{\r\n          if (status === 200){\r\n            setNextUrl(response.next)\r\n            const newTweets = [...tweets].concat(response.results)\r\n            setTweetsInit(newTweets)\r\n            setTweets(newTweets)\r\n          } else {\r\n            alert(\"There was an error\")\r\n          }\r\n        }\r\n        apiTweetList(props.username, handleLoadNextResponse, nextUrl)\r\n      }\r\n    }\r\n\r\n    return <React.Fragment>{tweets.map((item, index)=>{\r\n      return <Tweet  \r\n        tweet={item} \r\n        didRetweet={handleDidRetweet}\r\n        className='my-5 py-5 border bg-white text-dark' \r\n        key={`${index}-{item.id}`} />\r\n    })}\r\n    {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\r\n    </React.Fragment>\r\n  }","import React, {useEffect, useState}  from 'react'\r\n\r\nimport {TweetCreate} from './create'\r\nimport {Tweet} from './detail'\r\nimport {apiTweetDetail} from './lookup'\r\nimport {FeedList} from './feed'\r\nimport {TweetsList} from './list'\r\n\r\nexport function FeedComponent(props) {\r\n  const [newTweets, setNewTweets] = useState([])\r\n  const canTweet = props.canTweet === \"false\" ? false : true\r\n  const handleNewTweet = (newTweet) =>{\r\n    let tempNewTweets = [...newTweets]\r\n    tempNewTweets.unshift(newTweet)\r\n    setNewTweets(tempNewTweets)\r\n  }\r\n  return <div className={props.className}>\r\n          {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\r\n        <FeedList newTweets={newTweets} {...props} />\r\n  </div>\r\n}\r\n\r\nexport function TweetsComponent(props) {\r\n    const [newTweets, setNewTweets] = useState([])\r\n    const canTweet = props.canTweet === \"false\" ? false : true\r\n    const handleNewTweet = (newTweet) =>{\r\n      let tempNewTweets = [...newTweets]\r\n      tempNewTweets.unshift(newTweet)\r\n      setNewTweets(tempNewTweets)\r\n    }\r\n    return <div className={props.className}>\r\n            {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\r\n          <TweetsList newTweets={newTweets} {...props} />\r\n    </div>\r\n}\r\n\r\n\r\nexport function TweetDetailComponent(props){\r\n  const {tweetId} = props\r\n  const [didLookup, setDidLookup] = useState(false)\r\n  const [tweet, setTweet] = useState(null)\r\n\r\n  const handleBackendLookup = (response, status) => {\r\n    if (status === 200) {\r\n      setTweet(response)\r\n    } else {\r\n      alert(\"There was an error finding your tweet.\")\r\n    }\r\n  }\r\n  useEffect(()=>{\r\n    if (didLookup === false){\r\n\r\n      apiTweetDetail(tweetId, handleBackendLookup)\r\n      setDidLookup(true)\r\n    }\r\n  }, [tweetId, didLookup, setDidLookup])\r\n\r\n  return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\r\n }","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetsComponent} from './tweets'\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {ProfileBadgeComponent} from './profiles'\nimport {FeedComponent, TweetsComponent, TweetDetailComponent} from './tweets'\nimport * as serviceWorker from './serviceWorker';\n\nconst appEl = document.getElementById('root')\nif (appEl) {\n    ReactDOM.render(<App />, appEl);\n}\nconst e = React.createElement\nconst tweetsEl = document.getElementById(\"blackpost\")\nif (tweetsEl) {\n    ReactDOM.render(\n        e(TweetsComponent, tweetsEl.dataset), tweetsEl);\n}\n\nconst tweetFeedEl = document.getElementById(\"blackpost-feed\")\nif (tweetFeedEl) {\n    ReactDOM.render(\n        e(FeedComponent, tweetFeedEl.dataset), tweetFeedEl);\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".blackpost-detail\")\n\ntweetDetailElements.forEach(container=> {\n    ReactDOM.render(\n        e(TweetDetailComponent, container.dataset), \n        container);\n})\n\nconst userProfileBadgeElements = document.querySelectorAll(\".blackpost-profile-badge\")\n\nuserProfileBadgeElements.forEach(container=> {\n    ReactDOM.render(\n        e(ProfileBadgeComponent, container.dataset), \n        container);\n})\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}